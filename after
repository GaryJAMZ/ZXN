#!/bin/bash

# Obtener la salida de la 5ta columna en minúsculas
vga_device=$(lspci | grep VGA | tr "[:upper:]" "[:lower:]" | awk '{print $5}')

# Verificar tipo de GPU
if [[ "$vga_device" =~ (vmware) ]]; then
  echo "Detected VMware VGA device. Installing mesa and xf86-video-vmware..."
  sudo pacman -Sy --needed mesa xf86-video-vmware
elif [[ "$vga_device" =~ (nvidia) ]]; then
  echo "Detected NVIDIA VGA device. Installing nvidia drivers..."
  read -p "Do you want to install the NVIDIA drivers? (y/N): " install_nvidia
  if [[ "$install_nvidia" =~ ^[Yy]$ ]]; then
    sudo pacman -Sy --needed nvidia-dkms nvidia-utils lib32-nvidia-utils
  else
    echo "Skipping NVIDIA drivers installation."
  fi
elif [[ "$vga_device" =~ (amd|radeon) ]]; then
  echo "Detected AMD VGA device. Installing AMD drivers..."
  sudo pacman -Sy --needed mesa xf86-video-amdgpu vulkan-radeon lib32-vulkan-radeon
else
  echo "No known VGA device detected. Skipping driver installation."
fi

# Configuración del sistema
sudo mkinitcpio -p linux-zen
sudo pacman -S --needed --noconfirm acpi acpid inotify-tools nemo lame
sudo systemctl enable acpid.service

# Instalación de KDE Plasma
sudo pacman -Sy --needed --noconfirm kf6 qt6 drkonqi qt5-graphicaleffects plasma-framework5 kde-gtk-config kdeplasma-addons kgamma kinfocenter kscreen ksshaskpass kwallet-pam kwrited plasma-browser-integration plasma-desktop plasma-disks plasma-firewall plasma-nm plasma-pa plasma-systemmonitor plasma-thunderbolt plasma-vault sddm-kcm xdg-desktop-portal-kde plasma-activities polkit-kde-agent glib2 libaccounts-qt extra-cmake-modules plasma-applet-window-buttons plasma-workspace appmenu-gtk-module plasma5-integration xdg-desktop-portal-gtk
sudo systemctl enable sddm.service
sudo systemctl enable avahi-daemon.service

# Instalación de audio y multimedia
sudo pacman -S --needed --noconfirm gstreamer gst-libav gst-plugins-bad gst-plugins-base gst-plugins-ugly gst-plugins-good libdvdcss alsa-utils alsa-tools pulseaudio alsa-firmware pavucontrol lib32-pipewire-jack libpipewire pipewire-v4l2 pipewire-x11-bell pipewire-zeroconf

# Soporte para OS-Prober
sudo pacman -S --needed --noconfirm os-prober
sudo sed -i 's/#\s*GRUB_DISABLE_OS_PROBER=false/GRUB_DISABLE_OS_PROBER=false/' '/etc/default/grub'
sudo os-prober
sudo grub-mkconfig -o /boot/grub/grub.cfg

# Instalación personalizada opcional
read -p "Do you want a custom installation? (y/N): " custom_install

if [[ "$custom_install" =~ ^[Yy]$ ]]; then
  echo "Starting custom installation..."
  sudo pacman -S --needed --noconfirm flameshot kitty vlc neovim xclip nodejs-lts-iron npm firewalld gparted htop clamav gimp openssh wget
  
  mkdir -p ~/Desktop/$1/repos/blackarch
  cd ~/Desktop/$1/repos/blackarch
  curl -O https://blackarch.org/strap.sh
  chmod +x strap.sh
  sudo ./strap.sh
  
  git clone https://aur.archlinux.org/paru.git ~/Desktop/$1/repos/paru
  cd ~/Desktop/$1/repos/paru
  makepkg -si
  
  paru -S pamac-aur kvantum ttf-jetbrains-mono ttf-font-awesome ttf-font-awesome-4 ttf-material-design-icons
  
  sudo pacman -S --needed --noconfirm zsh lsd bat mdcat locate meld timeshift
  
  sudo usermod --shell /usr/bin/zsh $1
  paru -S zsh-syntax-highlighting zsh-autosuggestions
  
  sudo updatedb
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  ~/.fzf/install
  
  git clone https://github.com/NvChad/starter ~/.config/nvim && nvim
  git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
  
  sudo cp ~/.zshrc /root/
  sudo ln -s -f /home/$1/.zshrc /root/.zshrc
  sudo usermod --shell /usr/bin/zsh root
  sudo cp ~/.p10k.zsh /root/
else
  echo "Skipping custom installation."
  sudo pacman -S --needed --noconfirm konsole
fi

# Habilitar NetworkManager y reiniciar
sudo systemctl enable NetworkManager.service
reboot
