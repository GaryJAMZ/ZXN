#!/bin/bash

# Store the 5th column output in a variable
vga_device=$(lspci | grep VGA | tr "[:upper:]" "[:lower:]" | awk '{print $5}')

# Check for VMware and NVIDIA
if [[ "$vga_device" =~ (vmware|VMware) ]]; then
  # Install mesa and xf86-video-vmware if it's a VMware device
  echo "Detected VMware VGA device. Installing mesa and xf86-video-vmware..."
  sudo pacman -Sy mesa xf86-video-vmware
elif [[ "$vga_device" =~ (nvidia|NVIDIA) ]]; then
  # Install nvidia-dkms drivers if it's an NVIDIA device
  echo "Detected NVIDIA VGA device. Installing nvidia drivers..."
  sudo pacman -Sy nvidia-dkms nvidia-prime nvidia-utils lib32-nvidia-utils
else
  echo "No VMware or NVIDIA VGA device detected. Skipping installation."
fi

mkinitcpio -p linux-zen
sudo pacman -S --needed --noconfirm acpi acpid inotify-tools nemo lame p7zip unzip zip
sudo pacman -Sy --needed --noconfirm kf6 qt6 plasma-meta packagekit-qt6 kde-cli-tools kdeplasma-addons plasma-activities polkit-kde-agent glib2 ibus kscreen libaccounts-qt plasma-nm plasma-pa scim extra-cmake-modules kdoctools libibus wayland-protocols plasma-applet-window-buttons plasma-workspace appmenu-gtk-module kwayland-integration plasma5-integration xdg-desktop-portal-gtk
sudo systemctl enable sddm.service

sudo pacman -S --needed --noconfirm gstreamer gst-libav gst-plugins-bad gst-plugins-base gst-plugins-ugly gst-plugins-good libdvdcss alsa-utils alsa-tools pulseaudio alsa-firmware pavucontrol lib32-pipewire-jack libpipewire pipewire-v4l2 pipewire-x11-bell pipewire-zeroconf realtime-privileges sof-firmware ffmpeg ffmpegthumbs ffnvcodec-headers
echo "Adding support for OS-Prober"
sudo pacman -S --needed --noconfirm os-prober
sed -i 's/#\s*GRUB_DISABLE_OS_PROBER=false/GRUB_DISABLE_OS_PROBER=false/' '/etc/default/grub'
os-prober
grub-mkconfig -o /boot/grub/grub.cfg


read -p "Do you want a custom installation? (y/N): " custom_install

if [[ "$custom_install" =~ (y|Y) ]]; then
  echo "Starting custom installation..."
  unzip rec.zip
  mkdir -p ~/Desktop/$1/repos
  cd ~/Desktop/$1/repos
  sudo pacman -S --needed --noconfirm flameshot kitty vlc neovim xclip 	nodejs-lts-iron
  mkdir blackarch
  cd blackarch
  curl -O https://blackarch.org/strap.sh
  chmod +x strap.sh
  sudo ./strap.sh
  sudo pacman -Sy --noconfirm firewalld gparted htop clamav gimp openssh wget
  sudo pacman -Sy paru

  paru -S pamac-aur
  paru -S kvantum ttf-jetbrains-mono ttf-font-awesome ttf-font-awesome-4 ttf-material-design-icons
  paru -S spotify microsoft-edge-stable-bin
  cd /usr/share/fonts
  sudo mv /home/$1/iosevka.zip .
  sudo unzip iosevka.zip
  sudo rm iosevka.zip
  sudo mv /home/$1/icomoon.zip .
  sudo unzip icomoon.zip
  sudo mv icomoon/*.ttf .
  sudo rm -rf icomoon
  cd
  sudo sed -i '90s/^#//g' /etc/pacman.conf
  sudo sed -i '91s/^#//g' /etc/pacman.conf
  sudo pacman -Sy
  sudo pacman -Sl multilib
  sudo pacman -S zsh
  sudo usermod --shell /usr/bin/zsh $1
  paru -S zsh-syntax-highlighting zsh-autosuggestions
  sudo pacman -S locate
  sudo updatedb
  cd /usr/share
  sudo mkdir zsh-sudo
  sudo chown $1:$1 zsh-sudo/
  cd zsh-sudo
  sudo wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/sudo/sudo.plugin.zsh
  cd
  sudo pacman -S lsd bat mdcat
  cd /usr/share/fonts
  sudo mv /home/$1/Hack.zip .
  sudo unzip Hack.zip
  sudo rm Hack.zip
  cd
  mkdir ~/.config/kitty
  mv kitty.conf ~/.config/kitty/
  mv color.ini ~/.config/kitty/
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  ~/.fzf/install
  git clone https://github.com/NvChad/starter ~/.config/nvim && nvim
  git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
  sudo cp ~/.zshrc /root/
  sudo ln -s -f /home/$1/.zshrc /root/.zshrc
  sudo usermod --shell /usr/bin/zsh root
  sudo cp ~/.p10k.zsh /root/
  sudo rm rec.zip
  sudo pacman -S --needed --noconfirm meld timeshift
else
  echo "Skipping custom installation."
  sudo pacman -S --needed --noconfirm konsole
  sudo rm /home/$1/rec.zip
  sudo rm /root/rootinstaller
fi

sudo systemctl enable NetworkManager.service

reboot